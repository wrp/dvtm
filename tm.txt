
= {name} (1)
William R. Pursell; Anselm R. Garbe; Marc Andr√© Tanner
:doctype: manpage
:man manual: BSD General Commands Manual
:man source: {name} {version}
:man version: {version}

== NAME
{name} - modal virtual terminal manager

== SYNOPSIS
*{name}* [-v] [-?] [-m modifier] [-d delay] [-h lines] [-t title] [-s status-fifo] [-c cmd-fifo] [command ...]

== DESCRIPTION
{name} is the modal virtual terminal manager, a minimalistic window manager suitable
for use managing a single window in a session manager such as abduco(1) or tmux(1).

{name} is a fork of dvtm, with support for modality.

-h::
Print usage statement and exit.

-v::
Print version information and exit.

-m modifier::
Set command modifier at runtime.

-d delay::
  Set the delay ncurses waits before deciding if a character that might be part of an escape sequence is actually part of an escape sequence.

-r lines::
  Set the scrollback history buffer size at runtime.

-t title::
  Set a static terminal title and don't change it to the one of the currently focused window.

-s status-fifo::
  Open or create the named pipe status-fifo.  The fifo is monitored, and any data written to it will
  be displayed in the status bar.

-c cmd-fifo::
  Open or create the named pipe cmd-fifo.  The fifo is monitored and can be used by external processes to invoke certain commands.

command ...
  Execute command in a separate window.  If no command is given, one window will be executed at startup
  running $SHELL, or /bin/sh if SHELL is not defined.  If given, each command is executed through $SHELL (or /bin/sh).


== USAGE
Keyboard commands::
  Each keybinding begins with Mod which defaults to ^g but can be changed with the -m command line option.

Mod-c::
  Create a new shell window.

Mod-C::
  Create a new shell window using the current working directory of the focused window.

Mod-x-x::
  Close focused window.

Mod-l::
  Increases the master area width about 5% (all except grid and fullscreen layout).

Mod-h::
  Decreases the master area width about 5% (all except grid and fullscreen layout).

Mod-i::
  Increase number of windows displayed in the master area.

Mod-d::
  Decrease number of windows displayed in the master area.

Mod-j::
  Focus next window.

Mod-k::
  Focus previous window.

Mod-J::
  Focus window below.

Mod-K::
  Focus window above.

Mod-H::
  Focus window to the left.

Mod-L::
  Focus window to the right.

Mod-[0..9]::
  Focus the [0..9]-th window.

Mod-Tab::
  Focus previously selected window.

Mod-.::
  Toggle minimization of current window.

Mod-m::
  Maximize current window (change to fullscreen layout).

Shift-PageUp::

Mod-PageUp::
  Scroll up.

Shift-PageDown::

Mod-PageDown::
  Scroll down.

Mod-Space::
  Toggle between defined layouts (affects all windows).

Mod-Enter::
  Zooms/cycles current window to/from master area.

Mod-f::
  Change to vertical stack tiling layout.

Mod-s::
  Show/hide the status bar.

Mod-S::
  Toggle position of the status bar between top and bottom.

Mod-r::

Mod-^L::
  Redraw whole screen.

Mod-a::
  Toggle keyboard multiplexing mode, if activated keypresses are sent to all visible windows.

Mod-e::
  Enter copy mode (see section below for further information).

Mod-/::
  Enter copy mode and start searching forward (assumes a vi-like editor).

Mod-p::
  Paste last copied text from copy mode at current cursor position.

Mod-?::
  Show this manual page.

Mod-Mod::
  Send the Mod key.

Mod-F[1..n]::

Mod-v-[1..n]::
  View all windows with n-th tag.

Mod-0::
  View all windows with any tag.

Mod-v-Tab::
  Toggles to the previously selected tags.

Mod-V-[1..n]::
  Add/remove all windows with nth tag to/from the view.

Mod-t-[1..n]::
  Apply nth tag to focused window.

Mod-T-[1..n]::
  Add/remove nth tag to/from focused window.

Mod-q-q::
  Quit {name}.

Copy mode::
  Copy mode gives easy access to past output by piping it to {name}-editor(1), opening an editor.  What the editor writes will be stored in an internal reg-
  ister and can be pasted into other clients (via Mod-p ).

== ENVIRONMENT VARIABLES
=== MVTM
Each process spawned by {name} will have this variable set to the version it is running under.

=== MVTM_WINDOW_ID
Each process also has access to its constant and unique window id.

=== MVTM_CMD_FIFO
If the -c command line argument was specified upon {name} startup, this variable will be set to the file name of the named pipe. Thus allowing the
process to send commands back to {name}.

=== MVTM_STATUS_FIFO
If the -s command line argument was specified upon {name} startup, this variable will be set to the file name of the named pipe.

=== MVTM_TERM
By default {name} uses its own terminfo file and therefore sets TERM={name} within the client windows. This can be overridden by setting the MVTM_TERM
environment variable to a valid terminal name before launching {name}.

=== MVTM_EDITOR
When entering copymode, {name} pipes the whole scroll back buffer to {name}-editor(1) which opens the content in MVTM_EDITOR, with fallbacks to VISUAL,
DVTM_EDITOR, EDITOR and vi(1).

== SEE ALSO
abduco(1), dvtm(1), tmux(1)
